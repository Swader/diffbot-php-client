HTTP/1.1 200 OK
Server: nginx/1.6.0
Date: Sun, 08 Feb 2015 13:54:26 GMT
Content-Type: application/json;charset=utf-8
Transfer-Encoding: chunked
Connection: keep-alive
Vary: Accept-Encoding
Access-Control-Allow-Origin: *

{"request":{"pageUrl":"http://www.sitepoint.com/quick-tip-get-homestead-vagrant-vm-running/","api":"article","version":3},"objects":[{"tags":[{"id":2665045,"count":2,"prevalence":0.75,"label":"VirtualBox","type":"Http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#InformationEntity","uri":"http://dbpedia.org/resource/VirtualBox"},{"id":539086,"count":1,"prevalence":0.375,"label":"Virtual hosting","uri":"http://dbpedia.org/resource/Virtual_hosting"},{"id":744543,"count":1,"prevalence":0.375,"label":"Secure Shell","uri":"http://dbpedia.org/resource/Secure_Shell"},{"id":4566637,"count":1,"prevalence":0.375,"label":"Nginx","type":"Http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#InformationEntity","uri":"http://dbpedia.org/resource/Nginx"},{"id":118055,"count":1,"prevalence":0.375,"label":"MySQL","type":"Http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#InformationEntity","uri":"http://dbpedia.org/resource/MySQL"}],"icon":"http://www.sitepoint.com/wp-content/themes/sitepoint/assets/images/apple-touch-icon-144x144-precomposed.png","author":"Bruno Skvorc","text":"This quick tip will show you how to get a working Homestead Vagrant Box up and running in no time. Note, this quick tip is based on homestead_improved, my own version of Homestead which doesn\u2019t ask you to deal with SSH keys and automatically forwards port 5000 in order to accommodate Heroku\u2019s Foreman tool.\nRelevant articles (optional additional reading):\nStep 1 \u2013 prerequisites\nMake sure you have the newest Vagrant and VirtualBox installed for your operating system.\nIf on Windows, also install Git Bash via git tools.\nStep 2 \u2013 cloning\nUsing a command line (terminal in *nix, git bash on Windows), cd into the folder where you\u2019d like your virtual box to run from. For example, I use Windows as my host OS and have all my Vagrant things on D:\\VM\\vagrant_boxes.\nRun the following command ($DIR is the name of the directory you want your VM to reside in, e.g. \u201cHomestead\u201d):\n1\ngit clone https://github.com/Swader/homestead_improved $DIR\nStep 3 \u2013 set up sites and folders\nNow cd into $DIR, open Homestead.yaml and change your \u201cfolders\u201d section and/or your \u201csites\u201d section.\n\u201csites\u201d adds new virtual hosts for Nginx, so if you need to access multiple apps on one VM, add them here:\n1\n2\n3\n4\n5\nsites:\n- map: myapp.com\nto: /home/vagrant/Code/myapp/public\n- map: myapp2.com\nto: /home/vagrant/Code/myapp2/public\nUnder \u201cfolders\u201d, \u201cmap\u201d is the location of the folder on the host machine and \u201cto\u201d is the location of the folder in the VM.\nFor example, if you keep your code in /var/www/myapp and want to test/host it inside the VM, you could change the folders to this:\n1\n2\n3\nfolders:\n- map: /var/www/myapp\nto: /home/vagrant/Code/myapp\nTo add more of these bindings, just add a new map-to block underneath the current one, like so:\n1\n2\n3\n4\n5\nfolders:\n- map: /var/www/myapp\nto: /home/vagrant/Code/myapp\n- map: /var/www/myapp2\nto: /home/vagrant/Code/myapp2\nNote: This is no longer explicitly necessary, because by default HI will now map the current folder (the one the Vagrantfile is in) to the Code folder on the VM. This completely removes the need for changing the folders block, unless you keep your code somewhere else, not specific to this VM\u2019s instance.\nStep 4 \u2013 hosts\nOpen your host machine\u2019s hosts file and add a line for each of your added sites listed under the aforementioned sites block:\n1\n2\n127.0.0.1 myapp.com\n127.0.0.1 myapp2.com\nFor instructions on how to edit your hosts file on any given OS, see here.\nStep 5 \u2013 vagrant up\nRun vagrant up while inside $DIR, and when the procedure is finished, run vagrant ssh to enter the VM through SSH.\nYou can now access your sites through the browser on your host machine via http://myapp.com:8000/ and http://myapp2.com:8000/. You can connect to MySQL from the host machine\u2019s Workbench or any other database management tool by selecting the following connection parameters:\nport: 33060\nhost: 127.0.0.1\nusername: homestead\npassword: secret\nThat\u2019s it.","title":"Quick Tip: Get a Homestead Vagrant VM Up and Running","diffbotUri":"article|3|1072474106","pageUrl":"http://www.sitepoint.com/quick-tip-get-homestead-vagrant-vm-running/","authorUrl":"http://www.sitepoint.com/author/bskvorc/","humanLanguage":"en","html":"<p>This quick tip will show you how to get a working Homestead Vagrant Box up and running in no time. Note, this quick tip is based on <a href=\"https://github.com/Swader/homestead_improved\">homestead_improved<\/a>, my own version of Homestead which doesn&rsquo;t ask you to deal with SSH keys and automatically forwards port 5000 in order to accommodate Heroku&rsquo;s Foreman tool.<\/p>\n<p><em>Relevant articles (optional additional reading):<\/em><\/p>\n<h3>Step 1 &ndash; prerequisites<\/h3>\n<p>Make sure you have the newest Vagrant and VirtualBox installed for your operating system.<\/p>\n<p>If on Windows, also install Git Bash via <a href=\"http://git-scm.com/downloads\">git tools<\/a>.<\/p>\n<h3>Step 2 &ndash; cloning<\/h3>\n<p>Using a command line (terminal in *nix, git bash on Windows), <code>cd<\/code> into the folder where you&rsquo;d like your virtual box to run from. For example, I use Windows as my host OS and have all my Vagrant things on <code>D:\\VM\\vagrant_boxes<\/code>.<\/p>\n<p>Run the following command ($DIR is the name of the directory you want your VM to reside in, e.g. &ldquo;Homestead&rdquo;):<\/p>\n<table><tbody><tr><td>1<\/td><td><code>git clone <a href=\"https://github.com/Swader/homestead_improved\">https://github.com/Swader/homestead_improved<\/a> $DIR<\/code><\/td><\/tr><\/tbody><\/table>\n<h3>Step 3 &ndash; set up sites and folders<\/h3>\n<p>Now <code>cd<\/code> into <code>$DIR<\/code>, open <code>Homestead.yaml<\/code> and change your &ldquo;folders&rdquo; section and/or your &ldquo;sites&rdquo; section.<\/p>\n<p>&ldquo;sites&rdquo; adds new virtual hosts for Nginx, so if you need to access multiple apps on one VM, add them here:<\/p>\n<table><tbody><tr><td>12345<\/td><td><code>sites:<\/code><code>- map: myapp.com<\/code><code>to: /home/vagrant/Code/myapp/public<\/code><code>- map: myapp2.com<\/code><code>to: /home/vagrant/Code/myapp2/public<\/code><\/td><\/tr><\/tbody><\/table>\n<p>Under &ldquo;folders&rdquo;, &ldquo;map&rdquo; is the location of the folder on the host machine and &ldquo;to&rdquo; is the location of the folder in the VM.<\/p>\n<p>For example, if you keep your code in <code>/var/www/myapp<\/code> and want to test/host it inside the VM, you could change the folders to this:<\/p>\n<table><tbody><tr><td>123<\/td><td><code>folders:<\/code><code>- map: /var/www/myapp<\/code><code>to: /home/vagrant/Code/myapp<\/code><\/td><\/tr><\/tbody><\/table>\n<p>To add more of these bindings, just add a new map-to block underneath the current one, like so:<\/p>\n<table><tbody><tr><td>12345<\/td><td><code>folders:<\/code><code>- map: /var/www/myapp<\/code><code>to: /home/vagrant/Code/myapp<\/code><code>- map: /var/www/myapp2<\/code><code>to: /home/vagrant/Code/myapp2<\/code><\/td><\/tr><\/tbody><\/table>\n<p><strong>Note:<\/strong> This is no longer explicitly necessary, because by default HI will now map the current folder (the one the Vagrantfile is in) to the Code folder on the VM. This completely removes the need for changing the folders block, unless you keep your code somewhere else, not specific to this VM&rsquo;s instance.<\/p>\n<h3>Step 4 &ndash; hosts<\/h3>\n<p>Open your host machine&rsquo;s <code>hosts<\/code> file and add a line for each of your added sites listed under the aforementioned <code>sites<\/code> block:<\/p>\n<table><tbody><tr><td>12<\/td><td><code>127.0.0.1 myapp.com<\/code><code>127.0.0.1 myapp2.com<\/code><\/td><\/tr><\/tbody><\/table>\n<p>For instructions on how to edit your hosts file on any given OS, see <a href=\"http://www.rackspace.com/knowledge_center/article/how-do-i-modify-my-hosts-file\">here<\/a>.<\/p>\n<h3>Step 5 &ndash; vagrant up<\/h3>\n<p>Run <code>vagrant up<\/code> while inside <code>$DIR<\/code>, and when the procedure is finished, run <code>vagrant ssh<\/code> to enter the VM through SSH.<\/p>\n<p>You can now access your sites through the browser on your host machine via <code>http://myapp.com:8000/<\/code> and <code>http://myapp2.com:8000/<\/code>. You can connect to MySQL from the host machine&rsquo;s Workbench or any other database management tool by selecting the following connection parameters:<\/p>\n<ul> <li>port: 33060<\/li> <li>host: 127.0.0.1<\/li> <li>username: homestead<\/li> <li>password: secret<\/li> <\/ul>\n<p>That&rsquo;s it.<\/p>","date":"Mon, 30 Jun 2014 00:00:00 GMT","type":"article"}]}